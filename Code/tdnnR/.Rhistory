library{roxygen2}
library(roxygen2)
library(devtools)
install.packages("devtools")
library(devtools)
roxygenize
roxygenize()
roxygenise()
roxygenise()
use_gpl_license()
roxygenise()
usethis::use_testthat(3)
use_test()
install.packages("available")
roxygenise()
roxygenise()
available('tdnnR')
available::available('tdnnR')
roxygenise()
#' Calculate the distance between two points of interest
#'
#' @param x Point A of interest
#' @param y Point B of interest
#' @return A number.
dist <- function(x, y){
sqrt((x-y)^2)
}
dist(x = c(0,0,0), y = c(1,1,1))
#' Calculate the distance between two points of interest
#'
#' @param x Point A of interest
#' @param y Point B of interest
#' @return A number.
dist <- function(x, y){
sqrt(sum((x-y)^2))
}
dist(x = c(0,0,0), y = c(1,1,1))
dist(x = c(0,0,0), y = c(1,1,1))^2
roxygenise()
roxygenise()
roxygenise()
devtools::check()
devtools::check()
roxygenise()
roxygenise()
testthat::test_check()
testthat::test_package()
roxygenise()
roxygenise()
?choose
factor <-  1
factor*(2/1)
factor*(3/2)
factor*(2/1)*(3/2)
factor*(2/1)*(3/2)*(4/3)
s <- 3
s <- 5
n <- 10
choose(n-2, s-1)
choose(n-1, s-1)
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*(index/(index - s + 1))
}
factor
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
(index <- n-s+2-i)
#res <- res + factor*data_sorted[index,1]
(factor <- factor*(index/(index - s + 1)))
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*(index/(index - s + 1))
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*(index/(index - s + 1))
print(index)
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(n-(index - s + 1)))
print(index)
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(index - s + 1))
print(index)
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(index))
print(index)
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(n - index - s + 1))
print(index)
print(factor)
}
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(n - index - s + 1))
print(index)
print(factor)
}
# Calculate DNN estimator
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(n - index - s + 2))
print(index)
print(factor)
}
choose(n-1, s-1)
res <- 0
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
print(factor)
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index)/(n - index - s + 2))
}
choose(9, 4)
choose(n - n + s - 1, s-1)
choose(n - n + s - 2, s-1)
choose(n - n + s, s-1)
factor <- 1
prefactor <- 1/choose(n,s)
for(i in 1:(n-s+1)){
print(factor)
index <- n-s+2-i
#res <- res + factor*data_sorted[index,1]
factor <- factor*((n-index+1)/(n - index - s + 2))
}
roxygen2::roxygenise()
roxygenize
library(roxygen2)
roxygenise()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
roxygenise()
testthat::setup()
testthat::setup()
x <- c(0,0)
data <- matrix(data = c(0,1,2,5,1,2), ncol = 1)
as.vector(data)
n <- length(Y)
DNN(x, data, s = 2, presorted = TRUE)
data <- matrix(data = c(19,1,2,5,1,2), ncol = 1)
DNN(x, data, s = 2, presorted = TRUE)
DNN(x, data, s = 3, presorted = TRUE)
DNN(x, data, s = 4, presorted = TRUE)
DNN(x, data, s = 6, presorted = TRUE)
install.packages("philentropy")
?philent
?philentropy::euclidean
x = c(1,2,3)
y = matrix(data = rand(12), nrow = 3)
y = matrix(data = rnorm(12), nrow = 3)
philentropy::euclidean(x, y[1,-1])
philentropy::euclidean(x, y[1,-1], testNA = FALSE)
data <- y
dist_ranks <- order(unlist(purrr::map(.x = data,
.f = ~ philentropy::euclidean(x, .x[,-1], testNA = FALSE))))
dist_ranks <- order(unlist(purrr::map(.x = 1:n,
.f = ~ philentropy::euclidean(x, .x[.x,-1], testNA = FALSE))))
n = nrow(data)
dist_ranks <- order(unlist(purrr::map(.x = 1:n,
.f = ~ philentropy::euclidean(x, .x[.x,-1], testNA = FALSE))))
dist_ranks <- order(unlist(purrr::map(.x = 1:n,
.f = ~ philentropy::euclidean(x, data[.x,-1], testNA = FALSE))))
return(data[dist_ranks])
data[dist_ranks]
data[dist_ranks,]
styler:::style_active_file()
devtools::load_all()
DNN(x, data, s =2)
data <- matrix(data = rnorm(4*1000, sd = 10), nrow = 1000)
DNN(x, data, 10)
devtools::load_all()
DNN(x, data, 10)
DNN(x, data, 10)
DNN(x, data, 100)
DNN(x, data, 1000)
DNN(x, data, 1)
DNN(x, data, 10)
DNN(x, data, 20)
data <- matrix(data = rnorm(4*10000, sd = 10), nrow = 10000)
DNN(x, data, 20)
data[,1] <- data[,2]+data[,3]+data[,4]
DNN(x, data, 20)
sum(x)
DNN(x, data, 2)
DNN(x, data, 200)
DNN(x, data, 50)
TDNN(x, data, 50, 20)
devtools::load_all()
TDNN(x, data, 50, 20)
TDNN(x, data, 5, 2)
devtools::load_all()
TDNN(x, data, 5, 2)
devtools::load_all()
TDNN(x, data, 5, 2)
devtools::load_all()
TDNN(x, data, 5, 2)
styler:::style_active_file()
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
devtools::load_all()
DNN(x, data, 50)
DNN(x, data, 500)
DNN(x, data, 5)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
devtools::load_all()
TDNN(x, data, 5, 2, verbose = TRUE)
TDNN(x, data, 5, 2)
devtools::load_all()
TDNN(x, data, 5, 2)
TDNN(x, data, 10, 2)
TDNN(x, data, 10, 2, verbose = TUE)
TDNN(x, data, 10, 2, verbose = TRUE)
TDNN(x, data, 10, 5, verbose = TRUE)
View(data)
data2 <- pre_sort(x, data = data)
View(data2)
TDNN(x, data, 10, 9, verbose = TRUE)
TDNN(x, data2, 10, 9, verbose = TRUE)
TDNN(x, data2, 10, 2, verbose = TRUE)
TDNN(x, data2, 5, 2, verbose = TRUE)
TDNN(x, data2, 2, 5, verbose = TRUE)
DNN(x = x, data = data2, s = 5)
DNN(x = x, data = data2, s = 10)
DNN(x = x, data = data2, s = 100)
DNN(x = x, data = data2, s = 200)
DNN(x = x, data = data2, s = 100)
DNN(x = x, data = data2, s = 5)
DNN(x = x, data = data2, s = 2)
w1 <- -1.1876262
w2 <- 2.187626
w2*4.081139 + w1*2.379591
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
devtools::load_all()
TDNN(x, data2, 2, 5, verbose = TRUE)
